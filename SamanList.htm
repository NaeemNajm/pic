<!DOCTYPE html>
<html lang="bn">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶ø‡¶≠ ‡¶â‡¶Æ‡¶∞‡¶æ‡¶π ‡¶ö‡ßá‡¶ï‡¶≤‡¶ø‡¶∏‡ßç‡¶ü - ‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ï‡¶Æ‡¶æ‡¶π ‡¶ü‡ßç‡¶Ø‡ßÅ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶ü‡ßç‡¶∞‡¶æ‡¶≠‡ßá‡¶≤‡¶∏</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Hind+Siliguri:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Mecca Twilight -->
    <!-- Application Structure Plan: The application uses a tab-based navigation structure. This design was chosen to break down the long checklist from the source report into logical, manageable categories (e.g., Essentials, Men's, Women's). This prevents user overload and allows for focused preparation. Users can click on a tab to view the specific list, and interact with items by checking them off. A new summary section dynamically displays checked items. Download buttons for both the full list and the checked list (as PDF/JPG) have been added to provide users with offline-accessible versions of their lists. This structure directly serves the user's primary goal: to systematically pack for their journey and have a record of it. -->
    <!-- Visualization & Content Choices: Report Info: The source is a categorized checklist for Umrah. Goal: To create a practical, interactive packing tool with download functionality. Viz/Presentation Method: The information is presented in interactive lists within a tabbed interface. A new dynamic list shows checked items. Interaction: Users can click tabs, check/uncheck items. Checking an item adds it to a summary list. Download buttons trigger client-side generation of PDF/JPG files. Justification: This transforms a static document into a functional application. The download feature is a significant enhancement, allowing users to save or print their lists. Library/Method: Vanilla JS for logic, Tailwind CSS for styling, jsPDF and html2canvas for download functionality. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Hind Siliguri', sans-serif;
            background-color: #F0F2F5;
        }
        .tab-active {
            background-color: #2D3748; /* Gray 800 */
            color: white;
            border-color: #1A202C;
            box-shadow: 0 4px 14px 0 rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }
        .tab-inactive {
            background-color: #E2E8F0;
            color: #2D3748;
            border-color: #CBD5E0;
        }
        .content-panel { display: none; }
        .content-panel.active { display: block; }
        .checklist-item input:checked + label {
            text-decoration: line-through;
            color: #A0AEC0;
        }
        .checklist-item label {
            transition: all 0.2s ease-in-out;
            cursor: pointer;
        }
        .essential-item {
            color: #C53030; /* Red-700 */
            font-weight: 600;
        }
        .bag-tag {
            font-size: 0.75rem;
            font-weight: 500;
            padding: 2px 8px;
            border-radius: 9999px;
            margin-left: 8px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            line-height: 1.2;
        }
        .bag-hand {
            background-color: #EBF4FF;
            color: #3182CE;
            border: 1px solid #90CDF4;
        }
        .bag-luggage {
            background-color: #FEEBC8;
            color: #DD6B20;
            border: 1px solid #FBD38D;
        }
        .action-button {
            background-image: linear-gradient(to right, #D69E2E 0%, #B7791F 51%, #D69E2E 100%);
            color: white;
            padding: 8px 16px;
            border-radius: 8px;
            font-weight: 600;
            transition: 0.5s;
            background-size: 200% auto;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            font-size: 14px;
        }
        .action-button:hover {
            background-position: right center;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }
        .action-button:disabled {
            background-image: none;
            background-color: #A0AEC0;
            cursor: not-allowed;
            transform: translateY(0);
            box-shadow: none;
        }
        .printable-area {
            font-family: 'Hind Siliguri', sans-serif;
            position: absolute;
            left: -9999px;
            top: auto;
            width: 840px; /* A4-like width */
            background-color: #ffffff;
            padding: 40px;
            box-sizing: border-box;
            overflow: hidden;
        }
        .watermark-container {
            position: absolute;
            top: 0; left: 0; right: 0; bottom: 0;
            background-image: var(--watermark-url);
            background-repeat: repeat;
            z-index: 0;
        }
        .printable-header, .printable-footer, .printable-content {
            position: relative;
            z-index: 1;
        }
        .printable-header, .printable-footer {
            text-align: center;
            padding-bottom: 20px;
            margin-bottom: 20px;
            border-bottom: 2px solid #2D3748;
        }
        .printable-footer {
            padding-top: 20px;
            margin-top: 20px;
            border-top: 2px solid #2D3748;
            border-bottom: none;
        }
        .printable-header h1, .printable-footer h1 {
             font-size: 28px;
             font-weight: 700;
             color: #1A202C;
        }
        .printable-header p, .printable-footer p {
            font-size: 14px;
            color: #4A5568;
        }
        .printable-content {
            column-count: 2;
            column-gap: 40px;
        }
        .list-break {
            break-before: column;
        }
        .checked-category-title {
            font-size: 1.2rem;
            font-weight: 700;
            color: #1A202C;
            margin-top: 1rem;
            margin-bottom: 0.5rem;
            padding: 0.5rem;
            background-color: #EDF2F7;
            border-left: 4px solid #2D3748;
            border-radius: 4px;
        }
    </style>
</head>
<body class="antialiased text-gray-800">
    <div class="container mx-auto p-4 md:p-8 max-w-6xl">
        
        <header class="text-center mb-10 bg-white p-8 rounded-3xl shadow-2xl">
            <h1 class="text-6xl md:text-7xl font-bold text-gray-800">üïã</h1>
            <h2 class="text-3xl md:text-4xl font-bold text-gray-800 mt-2">‡¶™‡¶¨‡¶ø‡¶§‡ßç‡¶∞ ‡¶â‡¶Æ‡¶∞‡¶æ‡¶π ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ‡¶∞ ‡¶ö‡ßá‡¶ï‡¶≤‡¶ø‡¶∏‡ßç‡¶ü</h2>
            <div class="mt-4 max-w-2xl mx-auto bg-yellow-100 border-l-4 border-yellow-500 text-yellow-800 p-4 rounded-md" role="alert">
                <p class="font-bold">‡¶™‡¶¨‡¶ø‡¶§‡ßç‡¶∞ ‡¶≠‡ßÇ‡¶Æ‡¶ø‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶™‡¶¶‡¶ï‡ßç‡¶∑‡ßá‡¶™‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡¶¨‡ßã ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶∏‡ßç‡¶§ ‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ‡•§</p>
                <p>‡¶Ü‡¶∏‡ßÅ‡¶®, ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ü‡¶ß‡ßç‡¶Ø‡¶æ‡¶§‡ßç‡¶Æ‡¶ø‡¶ï ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßá‡¶∞‡¶æ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó ‡¶™‡ßá‡ßü‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ó‡¶∞‡ßç‡¶¨‡¶ø‡¶§‡•§</p>
            </div>
            
            <div class="mt-6 max-w-2xl mx-auto bg-red-100 border-l-4 border-red-500 text-red-800 p-4 rounded-md" role="alert">
                <p class="font-bold">‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶¶‡ßç‡¶∞‡¶∑‡ßç‡¶ü‡¶¨‡ßç‡¶Ø: ‡¶∏‡¶´‡¶∞‡ßá ‡¶Ø‡¶§ ‡¶ï‡¶Æ ‡¶∏‡¶æ‡¶Æ‡¶æ‡¶®, ‡¶§‡¶§ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶Ü‡¶∞‡¶æ‡¶Æ‡•§</p>
                <p>‡¶è‡¶á ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ‡¶ü‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶æ‡¶ô‡ßç‡¶ó ‡¶ß‡¶æ‡¶∞‡¶£‡¶æ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏‡¶™‡¶§‡ßç‡¶∞ ‡¶®‡¶ø‡¶® ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶Æ‡¶æ‡¶≤‡¶æ‡¶Æ‡¶æ‡¶≤ ‡¶¨‡¶π‡¶® ‡¶ï‡¶∞‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶ø‡¶∞‡¶§ ‡¶•‡¶æ‡¶ï‡ßÅ‡¶®‡•§</p>
            </div>

            <div class="mt-6">
                <input type="text" id="customer-name" placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..." class="px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-gray-800 focus:border-gray-800 w-full max-w-sm mx-auto text-center">
            </div>

            <div class="mt-6 p-4 border-t border-gray-200 max-w-2xl mx-auto">
                <h3 class="font-bold text-lg text-gray-700 mb-3 text-center">‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</h3>
                <div id="full-list-actions" class="flex justify-center flex-wrap gap-3">
                     <button data-type="full" data-format="pdf" class="action-button download-btn">‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° (PDF)</button>
                     <button data-type="full" data-format="jpg" class="action-button download-btn">‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° (JPG)</button>
                     <button data-type="full" class="action-button print-btn">‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®</button>
                     <button data-type="full" class="action-button share-btn">‡¶∂‡ßá‡ßü‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
                </div>
            </div>
        </header>

        <main id="main-checklist" class="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-4 sm:p-6">
            <div id="tab-nav" class="flex flex-wrap justify-center gap-2 mb-6">
                <button data-tab="from_agency" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">üéÅ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡¶ï‡ßç‡¶∑ ‡¶•‡ßá‡¶ï‡ßá</button>
                <button data-tab="essentials" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶Ö‡¶§‡ßç‡¶Ø‡¶æ‡¶¨‡¶∂‡ßç‡¶Ø‡¶ï‡ßÄ‡ßü</button>
                <button data-tab="general" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø</button>
                <button data-tab="men" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø</button>
                <button data-tab="women" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø</button>
                <button data-tab="newborn" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶®‡¶¨‡¶ú‡¶æ‡¶§‡¶ï</button>
                <button data-tab="child" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶∂‡¶ø‡¶∂‡ßÅ (‡ß®-‡ßß‡ß≠)</button>
                <button data-tab="elderly" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶¨‡ßü‡ßã‡¶ú‡ßç‡¶Ø‡ßá‡¶∑‡ßç‡¶†</button>
                <button data-tab="medicine" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶î‡¶∑‡¶ß</button>
                <button data-tab="optional" class="tab-button text-sm sm:text-base font-semibold py-2 px-3 rounded-lg border-2 transition-all duration-300">‡¶ê‡¶ö‡ßç‡¶õ‡¶ø‡¶ï</button>
            </div>

            <div id="tab-content">
                 <div id="from_agency" class="content-panel"></div>
                 <div id="essentials" class="content-panel"></div>
                 <div id="general" class="content-panel"></div>
                 <div id="men" class="content-panel"></div>
                 <div id="women" class="content-panel"></div>
                 <div id="newborn" class="content-panel"></div>
                 <div id="child" class="content-panel"></div>
                 <div id="elderly" class="content-panel"></div>
                 <div id="medicine" class="content-panel"></div>
                 <div id="optional" class="content-panel"></div>
            </div>
        </main>
        
        <section id="checked-items-summary" class="mt-8 bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-4 sm:p-6 hidden">
            <h3 class="text-2xl font-bold text-gray-800 mb-4 border-b-2 border-gray-800 pb-2">‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ó‡ßã‡¶õ‡¶æ‡¶®‡ßã ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶∏‡¶Æ‡ßÇ‡¶π</h3>
            <div id="checked-list-container"></div>
            <div class="mt-6 p-4 border-t border-gray-200">
                <h3 class="font-bold text-lg text-gray-700 mb-3 text-center">‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶ø‡¶§ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</h3>
                <div id="checked-list-actions" class="flex justify-center flex-wrap gap-3">
                    <button data-type="checked" data-format="pdf" class="action-button download-btn">‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° (PDF)</button>
                    <button data-type="checked" data-format="jpg" class="action-button download-btn">‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° (JPG)</button>
                    <button data-type="checked" class="action-button print-btn">‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®</button>
                    <button data-type="checked" class="action-button share-btn">‡¶∂‡ßá‡ßü‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
                </div>
            </div>
        </section>

        <footer class="text-center mt-8 bg-gray-800 text-white rounded-2xl p-6">
            <h4 class="font-bold text-xl">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶â‡¶Æ‡¶∞‡¶æ‡¶π ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ ‡¶π‡ßã‡¶ï ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶ì ‡¶ï‡¶¨‡ßÅ‡¶≤‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø</h4>
            <div class="mt-4 text-gray-300">
                <p class="font-semibold text-lg">‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ï‡¶Æ‡¶æ‡¶π ‡¶ü‡ßç‡¶Ø‡ßÅ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶ü‡ßç‡¶∞‡¶æ‡¶≠‡ßá‡¶≤‡¶∏</p>
                <p>‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó: +8801914137050 (WhatsApp) | ‡¶á‡¶Æ‡ßá‡¶á‡¶≤: alhikmahtourbd@gmail.com</p>
            </div>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const { jsPDF } = window.jspdf;
            
            const checklistData = {
                from_agency: { title: 'üéÅ ‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ï‡¶Æ‡¶æ‡¶π ‡¶è‡¶∞ ‡¶™‡¶ï‡ßç‡¶∑ ‡¶•‡ßá‡¶ï‡ßá', items: [
                    { name: '*‡¶≠‡¶ø‡¶∏‡¶æ‡¶∞ ‡¶π‡¶æ‡¶∞‡ßç‡¶°‡¶ï‡¶™‡¶ø', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡ßá‡¶∞ ‡¶π‡¶æ‡¶∞‡ßç‡¶°‡¶ï‡¶™‡¶ø', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ü‡¶á‡¶°‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶°', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶™‡¶ø‡¶†‡ßá ‡¶ù‡ßÅ‡¶≤‡¶æ‡¶®‡ßã‡¶∞ ‡¶¶‡ßÅ‡¶á ‡¶ö‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó', bag: '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' },
                    { name: '*‡¶≤‡¶æ‡¶ó‡ßá‡¶ú ‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó ‡¶∏‡ßç‡¶ü‡¶ø‡¶ï‡¶æ‡¶∞', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '*‡¶ì‡¶Æ‡¶∞‡¶æ ‡¶™‡¶æ‡¶≤‡¶®‡ßá‡¶∞ ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶æ‡¶¨‡¶≤‡¶ø ‡¶¨‡¶á', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' }
                ]},
                essentials: { title: 'üìÑ ‡¶Ö‡¶§‡ßç‡¶Ø‡¶æ‡¶¨‡¶∂‡ßç‡¶Ø‡¶ï‡ßÄ‡ßü ‡¶®‡¶•‡¶ø ‡¶ì ‡¶Ö‡¶∞‡ßç‡¶•', items: [
                    { name: '*üõÇ ‡¶™‡¶æ‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ì ‡¶≠‡¶ø‡¶∏‡¶æ (‡¶´‡¶ü‡ßã‡¶ï‡¶™‡¶ø‡¶∏‡¶π)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‚úàÔ∏è ‡¶¨‡¶ø‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü (‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ì ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶ï‡¶™‡¶ø)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*üí≥ ‡¶®‡ßç‡¶Ø‡¶æ‡¶∂‡¶®‡¶æ‡¶≤ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶° (‡¶´‡¶ü‡ßã‡¶ï‡¶™‡¶ø‡¶∏‡¶π) (‡¶Ö‡¶´‡¶ø‡¶∏ ‡¶™‡ßç‡¶∞‡¶¶‡¶§‡ßç‡¶§)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶™‡ßÅ‡¶∞‡¶æ‡¶§‡¶® ‡¶™‡¶æ‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü (‡¶Ø‡¶¶‡¶ø ‡¶•‡¶æ‡¶ï‡ßá)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üñºÔ∏è ‡¶™‡¶æ‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶∏‡¶æ‡¶á‡¶ú‡ßá‡¶∞ ‡¶õ‡¶¨‡¶ø (‡ßß‡ß¶-‡ßß‡ß® ‡¶ï‡¶™‡¶ø)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*üíµ ‡¶∏‡ßå‡¶¶‡¶ø ‡¶∞‡¶ø‡ßü‡¶æ‡¶≤ ‡¶ì ‡¶Ü‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶ú‡¶æ‡¶§‡¶ø‡¶ï ‡¶ï‡¶æ‡¶∞‡ßç‡¶°', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*üè∑Ô∏è ‡¶≤‡¶æ‡¶ó‡ßá‡¶ú ‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó (‡¶®‡¶æ‡¶Æ, ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶∏‡¶π) (‡¶Ö‡¶´‡¶ø‡¶∏ ‡¶™‡ßç‡¶∞‡¶¶‡¶§‡ßç‡¶§)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '‚òéÔ∏è ‡¶è‡¶ú‡ßá‡¶®‡ßç‡¶∏‡¶ø ‡¶ì ‡¶π‡ßã‡¶ü‡ßá‡¶≤‡ßá‡¶∞ ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶§‡¶•‡ßç‡¶Ø', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' }
                ]},
                general: { title: 'üéí ‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßç‡¶Ø', items: [
                    { name: '*üëú ‡¶õ‡ßã‡¶ü ‡¶ï‡¶æ‡¶Å‡¶ß‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó (‡¶Ö‡¶´‡¶ø‡¶∏ ‡¶™‡ßç‡¶∞‡¶¶‡¶§‡ßç‡¶§)', bag: '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' },
                    { name: '*üì± ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤, ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú‡¶æ‡¶∞ ‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶ü‡ßç‡¶∞‡¶≤‡¶ø/‡¶≤‡¶æ‡¶ó‡ßá‡¶ú ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üîå ‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶æ‡¶≤ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶≠‡ßá‡¶≤ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶æ‡¶™‡ßç‡¶ü‡¶æ‡¶∞', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üßº ‡¶ó‡ßã‡¶∏‡¶≤‡ßá‡¶∞ ‡¶∏‡¶æ‡¶¨‡¶æ‡¶® (‡¶∏‡ßÅ‡¶ó‡¶®‡ßç‡¶ß‡¶ø‡¶¨‡¶ø‡¶π‡ßÄ‡¶®)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üß¥ ‡¶∂‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡ßÅ, ‡¶ü‡ßÅ‡¶•‡¶™‡ßá‡¶∏‡ßç‡¶ü, ‡¶¨‡ßç‡¶∞‡¶æ‡¶∂', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üß¥ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∏‡¶≤‡¶ø‡¶®/‡¶≤‡¶ø‡¶™‡¶ú‡ßá‡¶≤', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üíß ‡¶õ‡ßã‡¶ü ‡¶™‡¶æ‡¶®‡¶ø‡¶∞ ‡¶¨‡ßã‡¶§‡¶≤ (‡¶ñ‡¶æ‡¶≤‡¶ø)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üç™ ‡¶π‡¶æ‡¶≤‡¶ï‡¶æ ‡¶∂‡ßÅ‡¶ï‡¶®‡ßã ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üïå ‡¶õ‡ßã‡¶ü ‡¶ú‡¶æ‡ßü‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‚òÇÔ∏è ‡¶õ‡ßã‡¶ü ‡¶õ‡¶æ‡¶§‡¶æ ‡¶ì üï∂Ô∏è ‡¶∏‡¶æ‡¶®‡¶ó‡ßç‡¶≤‡¶æ‡¶∏', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üöΩ ‡¶ü‡¶Ø‡¶º‡¶≤‡ßá‡¶ü ‡¶™‡ßá‡¶™‡¶æ‡¶∞', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' }
                ]},
                men: { title: 'üßîüèª ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø', items: [
                    { name: '*üè≥Ô∏è ‡¶á‡¶π‡¶∞‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶ï‡¶æ‡¶™‡ßú (‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ß® ‡¶∏‡ßá‡¶ü)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üí∞ ‡¶á‡¶π‡¶∞‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶¨‡ßá‡¶≤‡ßç‡¶ü (‡¶™‡¶ï‡ßá‡¶ü‡¶∏‡¶π)', bag: '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' },
                    { name: '*ü©¥ ‡¶´‡¶ø‡¶§‡¶æ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ñ‡ßã‡¶≤‡¶æ ‡¶∏‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üëï ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶™‡ßã‡¶∂‡¶æ‡¶ï (‡ß®-‡ß© ‡¶∏‡ßá‡¶ü)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '‚úÇÔ∏è ‡¶õ‡ßã‡¶ü ‡¶ï‡¶æ‡¶Å‡¶ö‡¶ø ‡¶¨‡¶æ ‡¶®‡ßá‡¶á‡¶≤ ‡¶ï‡¶æ‡¶ü‡¶æ‡¶∞', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üî™ ‡¶¨‡ßç‡¶≤‡ßá‡¶°/‡¶∞‡ßá‡¶ú‡¶æ‡¶∞ (‡¶á‡¶π‡¶∞‡¶æ‡¶Æ ‡¶∂‡ßá‡¶∑‡ßá)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' }
                ]},
                women: { title: 'üßïüèª ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø', items: [
                    { name: '*üßï ‡¶Ü‡¶¨‡¶æ‡ßü‡¶æ ‡¶ì ‡¶π‡¶ø‡¶ú‡¶æ‡¶¨ (‡ß®-‡ß© ‡¶∏‡ßá‡¶ü)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üß§ ‡¶π‡¶æ‡¶§ ‡¶Æ‡ßã‡¶ú‡¶æ ‡¶ì ‡¶™‡¶æ ‡¶Æ‡ßã‡¶ú‡¶æ', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '*üëü ‡¶Ü‡¶∞‡¶æ‡¶Æ‡¶¶‡¶æ‡ßü‡¶ï ‡¶ú‡ßÅ‡¶§‡¶æ/‡¶∏‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'ü©∏ ‡¶∏‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶ü‡¶æ‡¶∞‡¶ø ‡¶®‡ßç‡¶Ø‡¶æ‡¶™‡¶ï‡¶ø‡¶®/‡¶™‡ßç‡¶Ø‡¶æ‡¶°', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üß∑ ‡¶∏‡ßá‡¶´‡¶ü‡¶ø‡¶™‡¶ø‡¶® ‡¶ì ‡¶π‡¶ø‡¶ú‡¶æ‡¶¨ ‡¶™‡¶ø‡¶®', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üëó ‡¶π‡ßã‡¶ü‡ßá‡¶≤‡ßá ‡¶™‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶™‡ßã‡¶∂‡¶æ‡¶ï', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' }
                ]},
                newborn: { title: 'üë∂ ‡¶®‡¶¨‡¶ú‡¶æ‡¶§‡¶ï‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø', items: [
                    { name: '*‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶§ ‡¶°‡¶æ‡ßü‡¶æ‡¶™‡¶æ‡¶∞ ‡¶ì ‡¶ì‡ßü‡ßá‡¶ü ‡¶ü‡¶ø‡¶∏‡ßç‡¶Ø‡ßÅ', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶´‡¶ø‡¶°‡¶ø‡¶Ç ‡¶¨‡ßã‡¶§‡¶≤ ‡¶ì ‡¶´‡¶∞‡ßç‡¶Æ‡ßÅ‡¶≤‡¶æ ‡¶¶‡ßÅ‡¶ß', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶∂‡¶ø‡¶∂‡ßÅ‡¶ï‡ßá ‡¶¨‡¶π‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßá‡¶¨‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡¶æ‡¶∞', bag: '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' },
                    { name: '‡¶®‡¶∞‡¶Æ ‡¶ì ‡¶™‡¶æ‡¶§‡¶≤‡¶æ ‡¶ï‡¶æ‡¶Å‡¶•‡¶æ', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‡¶∂‡¶ø‡¶∂‡ßÅ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶∏‡¶æ‡¶¨‡¶æ‡¶®/‡¶∂‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡ßÅ', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶®‡¶∞‡¶Æ ‡¶ï‡¶æ‡¶™‡ßú (‡¶ï‡ßü‡ßá‡¶ï ‡¶∏‡ßá‡¶ü)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '‡¶õ‡ßã‡¶ü ‡¶ñ‡ßá‡¶≤‡¶®‡¶æ ‡¶¨‡¶æ ‡¶ö‡ßÅ‡¶∑‡¶®‡¶ø', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' }
                ]},
                child: { title: 'üëß ‡¶∂‡¶ø‡¶∂‡ßÅ (‡ß®-‡ßß‡ß≠) ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø', items: [
                    { name: '*‡¶Ü‡¶∞‡¶æ‡¶Æ‡¶¶‡¶æ‡ßü‡¶ï ‡¶ú‡ßÅ‡¶§‡¶æ ‡¶¨‡¶æ ‡¶∏‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶ó‡¶≤‡ßç‡¶™‡ßá‡¶∞ ‡¶¨‡¶á', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶∂‡ßÅ‡¶ï‡¶®‡ßã ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶æ ‡¶∏‡ßç‡¶®‡ßç‡¶Ø‡¶æ‡¶ï‡¶∏', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏ ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶õ‡ßã‡¶ü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó', bag: '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' },
                    { name: '‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶î‡¶∑‡¶ß‡¶™‡¶§‡ßç‡¶∞ (‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶∏‡¶ø‡¶ü‡¶æ‡¶Æ‡¶≤)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‡¶∞‡ßã‡¶¶ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶æ‡¶Å‡¶ö‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ü‡ßÅ‡¶™‡¶ø', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' }
                ]},
                elderly: { title: 'üë¥ ‡¶¨‡ßü‡ßã‡¶ú‡ßç‡¶Ø‡ßá‡¶∑‡ßç‡¶†‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø', items: [
                    { name: '*‡¶∏‡¶¨ ‡¶®‡¶ø‡ßü‡¶Æ‡¶ø‡¶§ ‡¶î‡¶∑‡¶ß (‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶§‡ßç‡¶∞ ‡¶∏‡¶π)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‡¶π‡¶æ‡¶Å‡¶ü‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶≤‡¶æ‡¶†‡¶ø ‡¶¨‡¶æ ‡¶π‡ßÅ‡¶á‡¶≤‡¶ö‡ßá‡ßü‡¶æ‡¶∞', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '‡¶π‡¶æ‡¶Å‡¶ü‡ßÅ ‡¶¨‡¶æ ‡¶ó‡ßã‡ßú‡¶æ‡¶≤‡¶ø‡¶∞ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü/‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ô‡ßç‡¶ï‡¶≤‡ßá‡¶ü', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '‡¶∏‡¶π‡¶ú‡ßá ‡¶π‡¶ú‡¶Æ ‡¶π‡ßü ‡¶è‡¶Æ‡¶® ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '*‡¶®‡¶∞‡¶Æ ‡¶ì ‡¶Ü‡¶∞‡¶æ‡¶Æ‡¶¶‡¶æ‡ßü‡¶ï ‡¶ú‡ßÅ‡¶§‡¶æ (‡¶®‡¶®-‡¶∏‡ßç‡¶≤‡¶ø‡¶™)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' }
                ]},
                medicine: { title: 'üè• ‡¶î‡¶∑‡¶ß ‡¶ì ‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ', items: [
                    { name: 'üíä ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶î‡¶∑‡¶ß (‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶∏‡¶ø‡¶ü‡¶æ‡¶Æ‡¶≤, ‡¶ó‡ßç‡¶Ø‡¶æ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶ï, ‡¶∏‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶á‡¶®)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'ü©π ‡¶¨‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶ú ‡¶ì ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶ü‡¶ø‡¶∏‡ßá‡¶™‡¶ü‡¶ø‡¶ï', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: '*ü©∫ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü ‡¶î‡¶∑‡¶ß (‡¶™‡ßç‡¶∞‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® ‡¶∏‡¶π)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' }
                ]},
                optional: { title: '‚ú® ‡¶ê‡¶ö‡ßç‡¶õ‡¶ø‡¶ï ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶â‡¶™‡¶ï‡¶æ‡¶∞‡ßÄ', items: [
                    { name: 'üìñ ‡¶õ‡ßã‡¶ü ‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶∂‡¶∞‡ßÄ‡¶´ ‡¶ì ‡¶¶‡ßã‡ßü‡¶æ‡¶∞ ‡¶¨‡¶á (‡¶Ö‡¶´‡¶ø‡¶∏ ‡¶™‡ßç‡¶∞‡¶¶‡¶§‡ßç‡¶§)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üìø ‡¶§‡¶∏‡¶¨‡¶ø‡¶π', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: '‚úíÔ∏è ‡¶°‡¶æ‡ßü‡ßá‡¶∞‡¶ø ‡¶ì ‡¶ï‡¶≤‡¶Æ', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üí¶ ‡¶∏‡ßç‡¶™‡ßç‡¶∞‡ßá ‡¶¨‡ßã‡¶§‡¶≤ (‡¶Ö‡¶ú‡ßÅ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üßµ ‡¶∏‡ßÅ‡¶á-‡¶∏‡ßÅ‡¶§‡¶æ', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üõçÔ∏è ‡¶≠‡¶æ‡¶Å‡¶ú ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶è‡¶Æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üíµ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßÄ ‡¶ü‡¶æ‡¶ï‡¶æ', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üß¥ ‡¶∏‡¶æ‡¶®‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® (‡¶§‡ßç‡¶¨‡¶ï‡ßá‡¶∞ ‡¶ß‡¶∞‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üò¥ ‡¶®‡ßá‡¶ï ‡¶™‡¶ø‡¶≤‡ßã', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üí® ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡ßá‡¶¨‡¶≤ ‡¶´‡ßç‡¶Ø‡¶æ‡¶®', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üîí ‡¶õ‡ßã‡¶ü ‡¶§‡¶æ‡¶≤‡¶æ (‡¶≤‡¶æ‡¶ó‡ßá‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üíß ‡¶™‡¶æ‡¶®‡¶ø‡¶∞‡ßã‡¶ß‡ßÄ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó (‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤/‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)', bag: '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' },
                    { name: 'üî™ ‡¶´‡¶≤ ‡¶ï‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶õ‡ßÅ‡¶∞‡¶ø', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üçΩÔ∏è ‡¶™‡ßç‡¶≤‡ßá‡¶ü, ‡¶ó‡ßç‡¶≤‡¶æ‡¶∏, ‡¶ö‡¶æ‡¶Æ‡¶ö, ‡¶Æ‡¶ó', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üßº ‡¶ï‡¶æ‡¶™‡ßú ‡¶ï‡¶æ‡¶ö‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶¨‡¶æ‡¶®', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'üéóÔ∏è ‡¶ï‡¶æ‡¶™‡ßú ‡¶∂‡ßÅ‡¶ï‡¶æ‡¶®‡ßã‡¶∞ ‡¶∞‡¶∂‡¶ø', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' },
                    { name: 'ü©π ‡¶∏‡¶æ‡¶∞‡ßç‡¶ú‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶ü‡ßá‡¶™', bag: '‡¶≤‡¶æ‡¶ó‡ßá‡¶ú' }
                ]}
            };

            function renderChecklists() {
                for (const category in checklistData) {
                    const panel = document.getElementById(category);
                    const data = checklistData[category];
                    let html = `
                        <h3 class="text-xl font-bold text-gray-700 mb-4 border-b-2 border-indigo-200 pb-2">${data.title}</h3>
                        <div class="checklist-item flex items-center mb-4 border-b pb-2">
                            <input id="select-all-${category}" type="checkbox" class="h-5 w-5 rounded border-gray-400 text-indigo-600 focus:ring-indigo-500 mr-3 select-all-checkbox" data-category="${category}">
                            <label for="select-all-${category}" class="text-gray-800 font-semibold">‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</label>
                        </div>
                        <ul class="space-y-3">`;
                    data.items.forEach((item, index) => {
                        const itemId = `${category}-${index}`;
                        const isEssential = item.name.startsWith('*');
                        const cleanItem = isEssential ? item.name.substring(1) : item.name;
                        const labelClass = isEssential ? 'essential-item' : '';
                        const starIcon = isEssential ? '<span class="text-red-500 mr-1">‚òÖ</span>' : '';
                        const bagTagClass = item.bag === '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' || item.bag === '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' ? 'bag-hand' : 'bag-luggage';

                        html += `
                            <li class="checklist-item flex items-center justify-between">
                                <div class="flex items-center">
                                    <input id="${itemId}" type="checkbox" class="h-5 w-5 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500 mr-3 item-checkbox" data-category="${category}" data-title="${data.title}" data-essential="${isEssential}" data-bag="${item.bag}">
                                    <label for="${itemId}" class="text-gray-700 flex items-center ${labelClass}">${starIcon} ${cleanItem}</label>
                                </div>
                                <span class="bag-tag ${bagTagClass}">${item.bag}</span>
                            </li>`;
                    });
                    html += '</ul>';
                    panel.innerHTML = html;
                }
            }

            function updateCheckedState() {
                const checkedItemsByCat = {};
                document.querySelectorAll('.item-checkbox:checked').forEach(cb => {
                    const categoryTitle = cb.dataset.title;
                    if (!checkedItemsByCat[categoryTitle]) checkedItemsByCat[categoryTitle] = [];
                    const labelContent = cb.nextElementSibling.innerHTML;
                    const bagTag = cb.closest('li').querySelector('.bag-tag').outerHTML;
                    checkedItemsByCat[categoryTitle].push({label: labelContent, bag: bagTag});
                });

                const container = document.getElementById('checked-list-container');
                const summarySection = document.getElementById('checked-items-summary');
                container.innerHTML = '';
                
                if (Object.keys(checkedItemsByCat).length > 0) {
                    for (const categoryTitle in checkedItemsByCat) {
                        let categoryHtml = `<h4 class="checked-category-title">${categoryTitle}</h4><ul class="space-y-2 list-disc list-inside text-gray-700 pl-4">`;
                        checkedItemsByCat[categoryTitle].forEach(item => {
                            categoryHtml += `<li class="flex justify-between items-center">${item.label}${item.bag}</li>`;
                        });
                        categoryHtml += `</ul>`;
                        container.innerHTML += categoryHtml;
                    }
                    summarySection.classList.remove('hidden');
                } else {
                    summarySection.classList.add('hidden');
                }
            }

            function handleSelectAll(e) {
                const category = e.target.dataset.category;
                document.querySelectorAll(`.item-checkbox[data-category="${category}"]`).forEach(cb => {
                    cb.checked = e.target.checked;
                });
                updateCheckedState();
            }
            
            function handleItemCheck(e) {
                const category = e.target.dataset.category;
                const itemCheckboxes = document.querySelectorAll(`.item-checkbox[data-category="${category}"]`);
                document.getElementById(`select-all-${category}`).checked = Array.from(itemCheckboxes).every(cb => cb.checked);
                updateCheckedState();
            }

            function switchTab(tab) {
                document.querySelectorAll('.tab-button').forEach(t => t.classList.replace('tab-active', 'tab-inactive'));
                tab.classList.replace('tab-inactive', 'tab-active');
                document.querySelectorAll('.content-panel').forEach(panel => panel.classList.remove('active'));
                document.getElementById(tab.dataset.tab).classList.add('active');
            }

            async function performAction(button, action) {
                const type = button.dataset.type;
                const format = button.dataset.format;
                const contentGenerator = type === 'full' ? generateFullListHTML : generateCheckedListHTML;
                const baseFilename = type === 'full' ? 'Umrah_Full_Checklist' : 'My_Umrah_Packed_Items';

                button.disabled = true;
                const originalText = button.textContent;
                button.textContent = '‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç...';

                const printableArea = document.createElement('div');
                printableArea.className = 'printable-area';
                
                const contentHTML = contentGenerator();
                if (!contentHTML) {
                    alert('‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§');
                    button.disabled = false;
                    button.textContent = originalText;
                    return;
                }
                
                await createPrintableContent(printableArea, contentHTML);
                document.body.appendChild(printableArea);
                
                const watermarkDataUrl = await createWatermarkWithLogo();
                printableArea.innerHTML += `<div class="watermark-container" style="background-image: ${watermarkDataUrl}"></div>`;

                try {
                    const canvas = await html2canvas(printableArea, { scale: 2, useCORS: true, backgroundColor: '#ffffff' });
                    
                    if (action === 'download') {
                        const customerName = document.getElementById('customer-name').value.trim().replace(/\s+/g, '_') || 'Guest';
                        const filename = `${baseFilename}_${customerName}`;
                        if (format === 'jpg') {
                            const link = document.createElement('a');
                            link.href = canvas.toDataURL('image/jpeg', 0.95);
                            link.download = `${filename}.jpg`;
                            link.click();
                        } else if (format === 'pdf') {
                            const imgData = canvas.toDataURL('image/png');
                            const pdf = new jsPDF({ orientation: 'p', unit: 'px', format: [canvas.width, canvas.height] });
                            pdf.addImage(imgData, 'PNG', 0, 0, canvas.width, canvas.height, undefined, 'FAST');
                            pdf.save(`${filename}.pdf`);
                        }
                    } else if (action === 'print') {
                        const iframe = document.createElement('iframe');
                        iframe.style.position = 'absolute';
                        iframe.style.width = '0';
                        iframe.style.height = '0';
                        iframe.style.border = '0';
                        document.body.appendChild(iframe);
                        
                        const doc = iframe.contentWindow.document;
                        doc.open();
                        doc.write(`<html><head><title>Print</title></head><body><img src="${canvas.toDataURL()}" style="width:100%;"></body></html>`);
                        doc.close();
                        
                        iframe.contentWindow.focus();
                        iframe.contentWindow.print();
                        setTimeout(() => { document.body.removeChild(iframe); }, 1000);

                    } else if (action === 'share') {
                        if (navigator.share) {
                            canvas.toBlob(async function(blob) {
                                const file = new File([blob], `${baseFilename}.jpg`, { type: 'image/jpeg' });
                                try {
                                    await navigator.share({
                                        title: '‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶â‡¶Æ‡¶∞‡¶æ‡¶π ‡¶ö‡ßá‡¶ï‡¶≤‡¶ø‡¶∏‡ßç‡¶ü',
                                        text: '‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ï‡¶Æ‡¶æ‡¶π ‡¶ü‡ßç‡¶Ø‡ßÅ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶ü‡ßç‡¶∞‡¶æ‡¶≠‡ßá‡¶≤‡¶∏ ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶â‡¶Æ‡¶∞‡¶æ‡¶π ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡¶ø‡•§',
                                        files: [file]
                                    });
                                } catch (err) {
                                    console.error('Share failed:', err.message);
                                    if (err.name !== 'AbortError') {
                                        alert('‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶∂‡ßá‡ßü‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶π‡ßü‡¶®‡¶ø‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶∞‡¶æ‡¶â‡¶ú‡¶æ‡¶∞ ‡¶¨‡¶æ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶≠‡¶ø‡¶â‡¶§‡ßá ‡¶è‡¶á ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶®‡¶æ‡¶ì ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§');
                                    }
                                }
                            }, 'image/jpeg');
                        } else {
                            alert('‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶∞‡¶æ‡¶â‡¶ú‡¶æ‡¶∞ ‡¶è‡¶á ‡¶∂‡ßá‡ßü‡¶æ‡¶∞ ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡•§');
                        }
                    }
                } catch (error) {
                    console.error('Action failed:', error);
                    alert('‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶è‡¶á ‡¶ï‡¶æ‡¶ú‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶π‡ßü‡¶®‡¶ø‡•§');
                } finally {
                    document.body.removeChild(printableArea);
                    button.disabled = false;
                    button.textContent = originalText;
                }
            }
            
            async function createPrintableContent(container, contentHTML) {
                const guestName = document.getElementById('customer-name').value.trim() || '‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶∞ ‡¶ò‡¶∞‡ßá‡¶∞ ‡¶Æ‡ßá‡¶π‡¶Æ‡¶æ‡¶®';
                
                const now = new Date();
                const days = ['‡¶∞‡¶¨‡¶ø‡¶¨‡¶æ‡¶∞', '‡¶∏‡ßã‡¶Æ‡¶¨‡¶æ‡¶∞', '‡¶Æ‡¶ô‡ßç‡¶ó‡¶≤‡¶¨‡¶æ‡¶∞', '‡¶¨‡ßÅ‡¶ß‡¶¨‡¶æ‡¶∞', '‡¶¨‡ßÉ‡¶π‡¶∏‡ßç‡¶™‡¶§‡¶ø‡¶¨‡¶æ‡¶∞', '‡¶∂‡ßÅ‡¶ï‡ßç‡¶∞‡¶¨‡¶æ‡¶∞', '‡¶∂‡¶®‡¶ø‡¶¨‡¶æ‡¶∞'];
                const dayName = days[now.getDay()];
                const dateString = now.toLocaleDateString('bn-BD', { year: 'numeric', month: 'long', day: 'numeric' });

                const qrData = encodeURIComponent('MECARD:N:Al-Hikmah Tour & Travels;TEL:+8801914137050;EMAIL:alhikmahtourbd@gmail.com;;');
                const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=100x100&data=${qrData}`;
                
                const logoUrl = 'https://raw.githubusercontent.com/NaeemNajm/pic/refs/heads/main/logo.png';

                const header = `
                    <div class="printable-header" style="border-bottom: 3px solid #4C51BF; display:flex; justify-content:space-between; align-items:center;">
                        <img id="printable-logo" src="${logoUrl}" alt="Company Logo" crossorigin="anonymous" style="height: 50px;">
                        <div style="text-align: right;">
                            <h1 style="color: #4C51BF; font-size: 32px; margin:0;">‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ï‡¶Æ‡¶æ‡¶π ‡¶ü‡ßç‡¶Ø‡ßÅ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶ü‡ßç‡¶∞‡¶æ‡¶≠‡ßá‡¶≤‡¶∏</h1>
                            <p style="font-size: 14px; color: #718096; margin:0;">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶∏‡ßç‡¶§ ‡¶≠‡ßç‡¶∞‡¶Æ‡¶£ ‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ</p>
                        </div>
                    </div>
                    <div style="text-align:center; margin: 20px 0;">
                        <h2 style="font-size: 24px; font-weight: 700; color: #2C5282;">‡¶™‡¶¨‡¶ø‡¶§‡ßç‡¶∞ ‡¶â‡¶Æ‡¶∞‡¶æ‡¶π ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ‡¶∞ ‡¶ö‡ßá‡¶ï‡¶≤‡¶ø‡¶∏‡ßç‡¶ü</h2>
                        <p style="font-size: 16px; color: #DD6B20; margin-top: 8px;">‡¶™‡ßç‡¶∞‡¶ø‡ßü ${guestName},<br>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶¨‡¶ø‡¶§‡ßç‡¶∞ ‡¶∏‡¶´‡¶∞‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡¶ø‡¶§‡ßá ‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ ‡¶π‡¶§‡ßá ‡¶™‡ßá‡¶∞‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶®‡¶®‡ßç‡¶¶‡¶ø‡¶§‡•§ ‡¶Æ‡¶π‡¶æ‡¶® ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶™‡¶¶‡¶ï‡ßç‡¶∑‡ßá‡¶™ ‡¶ï‡¶¨‡ßÅ‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶è‡¶á ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶∏‡ßá‡¶∞‡¶æ ‡¶∏‡ßç‡¶Æ‡ßÉ‡¶§‡¶ø ‡¶π‡ßü‡ßá ‡¶•‡¶æ‡¶ï‡ßÅ‡¶ï‡•§</p>
                        <p style="font-size: 14px; color: #718096; margin-top: 15px;">‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ${dateString}, ${dayName}</p>
                    </div>
                    <div style="background-color: #FEFCE8; border-left: 4px solid #FBBF24; color: #92400E; padding: 12px; margin: 20px 0; font-size: 14px; text-align: center; column-span: all;">
                        <b>‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶¶‡ßç‡¶∞‡¶∑‡ßç‡¶ü‡¶¨‡ßç‡¶Ø:</b> ‡¶∏‡¶´‡¶∞‡ßá ‡¶Ø‡¶§ ‡¶ï‡¶Æ ‡§∏‡§æ‡§Æ‡§æ‡§®, ‡¶§‡¶§ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶Ü‡¶∞‡¶æ‡¶Æ‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏‡¶™‡¶§‡ßç‡¶∞ ‡¶®‡¶ø‡¶® ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶Æ‡¶æ‡¶≤‡¶æ‡¶Æ‡¶æ‡¶≤ ‡¶¨‡¶π‡¶® ‡¶ï‡¶∞‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶ø‡¶∞‡¶§ ‡¶•‡¶æ‡¶ï‡ßÅ‡¶®‡•§
                    </div>
                    `;
                const footer = `
                    <div class="printable-footer" style="border-top: 2px solid #4C51BF; display: flex; align-items: center; justify-content: space-between; padding-top: 15px;">
                        <div style="text-align: left;">
                            <h1 style="font-size: 20px; color: #4C51BF;">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶ì ‡¶ï‡¶¨‡ßÅ‡¶≤‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶π‡ßã‡¶ï</h1>
                            <p style="color: #4A5568;">‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶õ‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶æ‡¶∂‡ßá‡•§</p>
                        </div>
                        <div>
                            <img id="printable-qr" src="${qrUrl}" alt="QR Code" crossorigin="anonymous" style="width: 80px; height: 80px;">
                        </div>
                    </div>`;
                
                container.innerHTML = `<div class="printable-content-wrapper">${header}<div class="printable-content">${contentHTML}</div>${footer}</div>`;
                
                const logoImg = container.querySelector('#printable-logo');
                const qrImg = container.querySelector('#printable-qr');
                const promises = [
                    new Promise(resolve => { logoImg.onload = resolve; logoImg.onerror = resolve; }),
                    new Promise(resolve => { qrImg.onload = resolve; qrImg.onerror = resolve; })
                ];
                await Promise.all(promises);
            }

            async function createWatermarkWithLogo() {
                return new Promise((resolve) => {
                    const logo = new Image();
                    logo.crossOrigin = "anonymous";
                    logo.src = 'https://raw.githubusercontent.com/NaeemNajm/pic/refs/heads/main/logo.png';

                    logo.onload = () => {
                        const canvas = document.createElement('canvas');
                        const ctx = canvas.getContext('2d');
                        canvas.width = 400;
                        canvas.height = 300;

                        ctx.globalAlpha = 0.04;
                        ctx.fillStyle = '#4C51BF';
                        ctx.font = 'bold 18px Hind Siliguri';
                        ctx.textAlign = 'center';

                        ctx.translate(canvas.width / 2, canvas.height / 2);
                        ctx.rotate(-Math.PI / 6);
                        ctx.translate(-canvas.width / 2, -canvas.height / 2);

                        ctx.drawImage(logo, 50, 80, 100, 33);
                        ctx.fillText('‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ï‡¶Æ‡¶æ‡¶π', 250, 100);
                        ctx.fillText('‡¶ü‡ßç‡¶Ø‡ßÅ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶ü‡ßç‡¶∞‡¶æ‡¶≠‡ßá‡¶≤‡¶∏', 150, 200);

                        resolve(`url(${canvas.toDataURL()})`);
                    };

                    logo.onerror = () => {
                        console.error("Logo could not be loaded for watermark.");
                        const canvas = document.createElement('canvas');
                        const ctx = canvas.getContext('2d');
                        canvas.width = 300;
                        canvas.height = 200;
                        ctx.globalAlpha = 0.05;
                        ctx.fillStyle = '#4C51BF';
                        ctx.font = 'bold 16px Hind Siliguri';
                        ctx.textAlign = 'center';
                        ctx.textBaseline = 'middle';
                        ctx.translate(150, 100);
                        ctx.rotate(-Math.PI / 4);
                        ctx.fillText('‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ï‡¶Æ‡¶æ‡¶π ‡¶ü‡ßç‡¶Ø‡ßÅ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶ü‡ßç‡¶∞‡¶æ‡¶≠‡ßá‡¶≤‡¶∏', 0, 0);
                        resolve(`url(${canvas.toDataURL()})`);
                    };
                });
            }

            function generateFullListHTML() {
                let html = '';
                const categories = Object.keys(checklistData);
                categories.forEach((category, index) => {
                    const data = checklistData[category];
                    const breakClass = index === 5 ? 'list-break' : ''; // Break after 5th category for better balance
                    html += `<div class="${breakClass}" style="page-break-inside: avoid;"><h3 style="font-size: 1.25rem; font-weight: 700; color: #2C5282; margin-top: 1.5rem; margin-bottom: 1rem; border-bottom: 2px solid #BEE3F8; padding-bottom: 0.5rem;">${data.title}</h3><ul style="list-style-type: none; padding: 0; margin-bottom: 1.5rem;">`;
                    data.items.forEach(item => {
                        const isEssential = item.name.startsWith('*');
                        const cleanItem = isEssential ? item.name.substring(1) : item.name;
                        const starIcon = isEssential ? '<span style="color: #C53030; font-weight: 600;">‚òÖ</span>' : '‚òê';
                        const bagTagStyle = `display: inline-flex; align-items: center; justify-content: center; font-size: 0.75rem; font-weight: 500; padding: 2px 8px; border-radius: 9999px; line-height: 1.2; ${item.bag === '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' || item.bag === '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' ? 'background-color: #EBF4FF; color: #3182CE; border: 1px solid #90CDF4;' : 'background-color: #FEEBC8; color: #DD6B20; border: 1px solid #FBD38D;'}`;
                        html += `<li style="margin-bottom: 0.5rem; color: #4A5568; font-size: 16px; display: flex; justify-content: space-between; align-items: center;"><span>${starIcon} ${cleanItem}</span><span style="${bagTagStyle}">${item.bag}</span></li>`;
                    });
                    html += `</ul></div>`;
                });
                return html;
            }

            function generateCheckedListHTML() {
                const checkedItemsByCat = {};
                 document.querySelectorAll('.item-checkbox:checked').forEach(cb => {
                    const categoryTitle = cb.dataset.title;
                    if (!checkedItemsByCat[categoryTitle]) checkedItemsByCat[categoryTitle] = [];
                    const isEssential = cb.dataset.essential === 'true';
                    const starIcon = isEssential ? '<span style="color: #C53030; font-weight: 600;">‚òÖ</span>' : '';
                    const bag = cb.dataset.bag;
                    const bagTagStyle = `display: inline-flex; align-items: center; justify-content: center; font-size: 0.75rem; font-weight: 500; padding: 2px 8px; border-radius: 9999px; line-height: 1.2; ${bag === '‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ó' || bag === '‡¶∏‡¶æ‡¶•‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá' ? 'background-color: #EBF4FF; color: #3182CE; border: 1px solid #90CDF4;' : 'background-color: #FEEBC8; color: #DD6B20; border: 1px solid #FBD38D;'}`;
                    const bagTagHtml = `<span style="${bagTagStyle}">${bag}</span>`;
                    checkedItemsByCat[categoryTitle].push({ text: `${starIcon} ${cb.nextElementSibling.textContent.trim()}`, bagTag: bagTagHtml });
                });

                if (Object.keys(checkedItemsByCat).length === 0) {
                    alert('‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§');
                    return null;
                }
                let html = `<h3 style="font-size: 1.5rem; font-weight: 700; color: #2C5282; margin-bottom: 1.5rem; text-align: center; column-span: all;">‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ó‡ßã‡¶õ‡¶æ‡¶®‡ßã ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶∏‡¶Æ‡ßÇ‡¶π</h3>`;
                Object.keys(checkedItemsByCat).forEach(categoryTitle => {
                    html += `<div style="page-break-inside: avoid;"><h4 style="font-size: 1.2rem; font-weight: 600; color: #2D3748; margin-top: 1rem; margin-bottom: 0.5rem; border-bottom: 1px solid #CBD5E0; padding-bottom: 0.25rem;">${categoryTitle}</h4><ul style="list-style-type: none; padding: 0; margin-bottom: 1rem;">`;
                    checkedItemsByCat[categoryTitle].forEach(item => {
                        html += `<li style="margin-bottom: 0.5rem; color: #4A5568; font-size: 16px; display: flex; justify-content: space-between; align-items: center;"><span>‚òë ${item.text}</span>${item.bagTag}</li>`;
                    });
                    html += `</ul></div>`;
                });
                return html;
            }

            renderChecklists();
            
            document.querySelectorAll('.tab-button').forEach(tab => tab.addEventListener('click', () => switchTab(tab)));
            document.body.addEventListener('change', e => {
                if (e.target.classList.contains('select-all-checkbox')) handleSelectAll(e);
                if (e.target.classList.contains('item-checkbox')) handleItemCheck(e);
            });

            document.querySelectorAll('.download-btn').forEach(btn => btn.addEventListener('click', (e) => performAction(e.currentTarget, 'download')));
            document.querySelectorAll('.print-btn').forEach(btn => btn.addEventListener('click', (e) => performAction(e.currentTarget, 'print')));
            document.querySelectorAll('.share-btn').forEach(btn => btn.addEventListener('click', (e) => performAction(e.currentTarget, 'share')));

            if (document.querySelectorAll('.tab-button').length > 0) {
                switchTab(document.querySelector('.tab-button'));
            }
        });
    </script>
</body>
</html>
